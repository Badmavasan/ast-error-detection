# Error Tags

# not used
FOR_LOOP_INCORRECT_NUMBER_OF_ITERATIONS = "FOR_LOOP_INCORRECT_NUMBER_OF_ITERATIONS"

FOR_LOOP_MISSING = "FOR_LOOP_MISSING"
FOR_LOOP_BODY_MISMATCH = "FOR_LOOP_BODY_MISMATCH"
MISSING_STATEMENT = "MISSING_STATEMENT"
ERROR_VALUE_PARAMETER = "ERROR_VALUE_PARAMETER"

# VAR

# CS
CS_BODY_ERROR = "CS_BODY_ERROR"
CS_BODY_MISPLACED = "CS_BODY_MISPLACED"
CS_MISSING = "CS_MISSING"

# FUNCTION
F_DEFINITION_MISSING = "F_DEFINITION_MISSING"

# LOOP
LO_FOR_NUMBER_ITERATION_ERROR = "LO_FOR_NUMBER_ITERATION_ERROR"
LO_FOR_NUMBER_ITERATION_ERROR_UNDER2 = "LO_FOR_NUMBER_ITERATION_ERROR_UNDER2"
LO_WHILE_NUMBER_ITERATION_ERROR = "LO_WHILE_NUMBER_ITERATION_ERROR"
LO_WHILE_NUMBER_ITERATION_ERROR_UNDER2 = "LO_WHILE_NUMBER_ITERATION_ERROR_UNDER2"
LO_BODY_MISSING_NOT_PRESENT_ANYWHERE = "LO_BODY_MISSING_NOT_PRESENT_ANYWHERE"
LO_BODY_MISPLACED = "LO_BODY_MISPLACED"
LO_FOR_MISSING = "LO_FOR_MISSING"
LO_WHILE_MISSING = "LO_WHILE_MISSING"

# EXPRESSION

# ALGORITHM AND PROGRAM
PA_PROBLEM_DECOMPOSITION_ALGORITHMIC_STRATEGIE_ERROR = "PA_PROBLEM_DECOMPOSITION_ALGORITHMIC_STRATEGIE_ERROR"



# Annotation Tags

ANNOTATION_TAG_CONST_VALUE_MISMATCH = "CONST_VALUE_MISMATCH"
ANNOTATION_TAG_MISSING_FOR_LOOP = "MISSING_FOR_LOOP"
ANNOTATION_TAG_MISSING_WHILE_LOOP = "MISSING_WHILE_LOOP"
ANNOTATION_TAG_MISSING_CS = "MISSING_IF_STATEMENT"
ANNOTATION_TAG_MISSING_FUNCTION_DEFINITION = "MISSING_FUNCTION_DEFINITION"
ANNOTATION_TGA_MISSING = "MISSING"
ANNOTATION_TGA_INCORRECT_POSITION_LOOP = ["INCORRECT_STATEMENT_POSITION_FOR", "INCORRECT_STATEMENT_POSITION_WHILE"]
ANNOTATION_TGA_INCORRECT_POSITION_CS = "INCORRECT_STATEMENT_POSITION_IF"

# Annotation Contexts

ANNOTATION_CONTEXT_FOR_LOOP_BODY = "Module > For > Body"
ANNOTATION_CONTEXT_WHILE_LOOP_BODY = "Module > While > Body"
ANNOTATION_CONTEXT_CS_BODY = "Module > If > Body"

# This regex checks if the context ends with a pattern like:
# "Call: <any_text> > Const: <any_text>"
ANNOTATION_CONTEXT_FUNCTION_PARAMETER = r"Call:\s*.+\s*>\s*Const:\s*.+\s*$"




